<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="bunifuFlatButton1.Iconimage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAYAAABXAvmHAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAofSURBVGhD7ZltaJVlGMdPrqmp+TpHc83c1mJuTk61YpSt
        YTRqTdvKTKeFqNW0kMReCEeZA6MUJa1QtDLJoDd60y9ZkERR2odKCMK+RH6Iom8ZBNnT9fs/z/XsPqez
        syP0oQ8euLjvcz/3fd3//3X97+t+zpY59/m/ffr6+qKurq6SrLu7Wxb2/Xs4J+yXMm846+/vjxKYhT+1
        tbVRNpuNaBtnzy5qlzY1p9bS0qKx2XNacr6Hht+GhgZZ/jMfc3/5z2fVX5oa3xO4uR8HjtW3XK6JtIA6
        W2ucm5XhEx9hUHzM/aufzId4IX8Y8zH8oJIE9tDHwbPBzOZsVN25JKrrXhrV37xYbWgNPXerbersiZqu
        uiZqmjdf1tx2Xdy3cfpzOjpl+HTgzVe0ak5d+03xfJuLrxkLVubsgTmGuht7o5rs1SmJ1tbWwgQ8UizK
        HPt7ZPvwFwGYtnFvVP7md1HzgqXRpB3vRGMPHI+yvcujcfs/i8bv/khAiS7+IVz23smo4rHno6YbuuWj
        oO88gzQBAN+wBDAmOYHpG7ZHF9+1PrX6u4fayVvfjgncvEhZYhywZe//pHHA0zLmWSD6kPGoOoGpm1+N
        alY8nLOXGxjAQjY8A/hKYA99wgxcfItpzBbV9j2gjdyZb8LGRN0JYNX9T6TRcgIY8yDcuHSN/NXftkpZ
        kJQSAlXrt6pfY8/x74HyvfE5c35PaRmAhBNgsTtI7ehpSQUJOAEiGM5xCfGsrn9TzjPWe0ZCApyrnHlm
        kPX9ybIf4mEJMAGWYQaIeug08+lf2swJQKYQAcBPGzigs+HjE589HLUsWikCYQamP7QzmtN7l3yHfsIA
        lpyBkED1ovsLEmAzlxCRFgHrc4AxnhFVwJ//9imdF4wxrHb1RhGnABTLAAF0AhfNXzRyBrCCErK0Kzq0
        ZqQzlBCAx+77Rn0su2xtDMLWTNh1JMreeY+IAlQ+7BlrGMscijMAocyR33P2qe69J97fxlxCRQ+xZ4AT
        7wQ4SFQN9BjW/5AAUsCQBsCIOuvRP0YmMIE2MlSqfAKSlZHAP/vo/gkO8VllQASMNdIAKBvQeh8bveuY
        NocA5KpXbRQIJARA1rpkJDGbi4xE4I0fhghYEMhS6Du0C598S1jO6gzAnA2HNduUlqgSeTYft+9TkZn8
        zLtxFTKgjLmEGOMZfTIEAeYjPfen1i3Yh3ZGx62lZUAkrponEkojl44Z6eU7gHkm6SSvDKGEUgJ2Di7Y
        dzwmYJFmLHPkTHzRWUSdAGvky8z3CqWqvewWvmRua2kEyEBD2/XagDIoS/ro0W9TDhi3JABULdYOCgQE
        FGGbTwsBxqk8PNMhNYMcEtE7VPJ+NOWR/UP7mQEeI8M1bfOFb8RDjKkKJRulZtHDOS9hbIa2R+/5TJFn
        HCkQaYG0aoLOacft/ETjImokyg6elEkab/2mcYzs4gNZjjrwo/qVvWtk9CFQcgb8EOcb4ACMQ0C7BDik
        gELfkhBkTEKcAYhDRDIx4synT4QhgTQnrtuvNYwTIObMbO8S+QnbDmvMDzBWNAN1lzWmGcBxxcrHJQ/k
        MGnwNUXKI0TK2TStMgbeo6tMEGUImC8uP6SHXACIfHgu0KZ3Lk3ekQAHWObpHjAsIXisaAZSArYxDnDE
        oQZ85dotOlh+wxIhSmgsmxio2kOnRRCLpXRGL2i8RnBAackgBOoXr0kLAKUSMgSJus9ZzAePlZaBhAAO
        sPQHiG1GBgAAkDTKbkZCEjLdY3qZC58XMM4T4PPH2R8SVKCQSEECVVVVwxLAgS4ykxMZgABZiC+z0yLD
        ReYbOwFpOymfxQwCRJ4+0qpYPah++e4vleWx245EVW03FifgD1MCh87IEakk8ug9JIDWIUCZRFoiYGsA
        DyEqDn2BtHEHW8ggULtwhfr4oYgAHIME68lQUQKFMoB5FSALEPFDTBXhYOrNVHqO58+4d7PuBa3PB16I
        iI0Rdc6S+ssHYqlaxWIvvQtZFeMmLkrAH2JEHedEfOqSRxVpd3beDouqySbz4ildRnwHNACQAYfRwfi4
        Xs6shZjI2VoHrzbxxXcywP7siW8yT0b4UV+UgGcAQ28umYkbrF7bJpNXPx2/WCUbIw++Y0hNtzSRs1Io
        AjZPFYafjzbOc352UpLJntYOfqCWKjZ+IG4nLd+sfd33lLW79N0JzJhVJANVM2dpkiqPRRwNKkoH/4xb
        7xs4QOhysjNBf9Se7+MfKValRMDmeUZ0+W3/Il5rRkaQHuv9HYu5jEOCucqajaMA9h1RQmEGmFy281tt
        RgXgbzble08oSoDjDJB2UgxAssUmrIGI5tnmPAPYqOd+kHQou6wfu/Wo5hUykbRXDPbTd+QWEABnUQKk
        qPrya5Q6ymBl3wbV4inLBlRWOdBIhmfIKiTgRgQZ121qNyxjzOew6gY+8Ks0zhhr3ZiHrCY89LqeYciI
        cQiADYz8jSmBPfRxdrT8ZY4F/jYI6Py+bk1r0ThkAeV2weCHcdUyAqrvjL9ptzTRTfqAk7ys2mCqfDZO
        cMiefsC4hGyc70UJAN4nAF6pw9jQ+9heu3mTPpLxm9KBQIoxvYIklyBaZy7S0u1ta6es261gIENA6iaG
        ZP5+CeEwAyNKSGXUFo1/8KBkghFlzPtEGTKAACivujr8ZoxNvnenNmUzSFDfKavIA1BIiXmSppVJvQGz
        J9Uo2dONrCBr8BU9A07CnVUs7FdJJTqQosW0MbJJCLAGkLz0YS4H9O8Z4vUYEhzozMvxmVD1SeSoNTZO
        yZQvC4T+yGzAwVDd2KLgFiWQnwEOLSTo41ztK79rUyIcZgAQPNOrAAc3mT9u4H3NGb35c0Wf8igS7jPw
        Szv1joflD8AQ4QcNZ6eyrXNkAhiTKrpMp+aYxdNvWze0SbIRYD0DiqzNASjzAEolYS46JwjMOX+7vYKb
        QQLZ+HzmMYZUtMaeIT3ky/iYxz/WvKp5XaUTCCUkAgDH2NAIkKFUQpYN5MB4+davZQBlLuBJP5VIYzYf
        ghDS+sQvfQ8URFR5EnKswWflFe2lE5jecbsckAFJCGeJnffSH4qQJPRCTGDCfXskC50P+w5w5iIlJKG1
        BoaIMkc/kOyVIfTrc/L7ZIBzUHPZbOE7KwJ+iGlTM3kx5gTIBhkgwmgdYBAiorTlW74aArXrZ0kHQATB
        fTLXoz5+tVU7kxF9fIGF8+D4RiTA+5AT0ItVCD4wNAoBIgrQsm3fiRibAwKQtE4A6RDNMY8e1rOLrmzP
        8eeZyifAM/AoA4atNALXLpCDEc0iCmgReOqE3hjZCON3BWUQAMwlU1QVookVlFAR4ww4xoIE/JLA2AAS
        qVkE1Lb35JqNCVASUY+S+6KFBCSZhzy9VDPuvpHTv3wn/r0Nz0BPj5Xs/M+mTZvSCW469aRtOGNe0mpu
        sDa1vHk546VasI4AJJALfzo6OpSi/6Px3/wE5rnPuc9/88lk/gGNqXfDAvW+4AAAAABJRU5ErkJggg==
</value>
  </data>
</root>